{
  "openapi": "3.0.1",
  "info": {
    "title": "Recipedia OpenApi specification",
    "description": "OpenApi documentation for Spring Security",
    "termsOfService": "Terms of Service",
    "contact": {
      "name": "rzn",
      "url": "https://rzndev.com",
      "email": "rosenberg2001fb@gmail.com"
    },
    "license": {
      "name": "License1",
      "url": "https://Random-license-url.com "
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Local ENV"
    },
    {
      "url": "https://rnzdev.com",
      "description": "Prod ENV"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/user/image": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "uploadProfilePicture",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "post": {
        "tags": [
          "Review"
        ],
        "operationId": "saveReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "operationId": "findAllRecipes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "KOREAN",
                  "SALAD",
                  "QUICK",
                  "VEGAN",
                  "ITALIAN",
                  "VEGETARIAN",
                  "SOUP",
                  "BAKERY",
                  "PASTA",
                  "CHICKEN"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecipeResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipe"
        ],
        "operationId": "saveRecipe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/recipes/image/{recipe-id}": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "operationId": "uploadRecipeTitleImage",
        "parameters": [
          {
            "name": "recipe-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "getAuthenticatedUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{recipe-id}": {
      "get": {
        "tags": [
          "Review"
        ],
        "operationId": "findAllReviewsByRecipe",
        "parameters": [
          {
            "name": "recipe-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{recipe-id}": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "operationId": "findRecipeById",
        "parameters": [
          {
            "name": "recipe-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipe"
        ],
        "operationId": "deleteRecipeById",
        "parameters": [
          {
            "name": "recipe-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/recipes/author": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "operationId": "findAllRecipesByAuthor",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "KOREAN",
                  "SALAD",
                  "QUICK",
                  "VEGAN",
                  "ITALIAN",
                  "VEGETARIAN",
                  "SOUP",
                  "BAKERY",
                  "PASTA",
                  "CHICKEN"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecipeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/activate-account": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "confirm",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReviewRequest": {
        "required": [
          "recipeId"
        ],
        "type": "object",
        "properties": {
          "rate": {
            "maximum": 5,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "comment": {
            "type": "string"
          },
          "recipeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CookingStep": {
        "required": [
          "number",
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Ingredient": {
        "required": [
          "name",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          }
        }
      },
      "RecipeRequest": {
        "required": [
          "cookingSteps",
          "cookingTime",
          "description",
          "ingredients",
          "preparationTime",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "preparationTime": {
            "pattern": "^(?:[1-5]?\\d(?:\\.\\d+)?|60(?:\\.0+)?) (minutes|minute|mins|min|hours|hour|hrs|hr)$",
            "type": "string"
          },
          "cookingTime": {
            "pattern": "^(?:[1-5]?\\d(?:\\.\\d+)?|60(?:\\.0+)?) (minutes|minute|mins|min|hours|hour|hrs|hr)$",
            "type": "string"
          },
          "cookingSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookingStep"
            }
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "KOREAN",
                "SALAD",
                "QUICK",
                "VEGAN",
                "ITALIAN",
                "VEGETARIAN",
                "SOUP",
                "BAKERY",
                "PASTA",
                "CHICKEN"
              ]
            }
          }
        }
      },
      "RegistrationRequest": {
        "required": [
          "email",
          "firstname",
          "lastname",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "AuthenticationRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "jwtToken": {
            "type": "string"
          }
        }
      },
      "UserRequest": {
        "required": [
          "email",
          "firstname",
          "lastname"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profilePicture": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "ReviewResponse": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double"
          },
          "comment": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "PageResponseRecipeResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "RecipeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "preparationTime": {
            "type": "string"
          },
          "cookingTime": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "cookingSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookingStep"
            }
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "KOREAN",
                "SALAD",
                "QUICK",
                "VEGAN",
                "ITALIAN",
                "VEGETARIAN",
                "SOUP",
                "BAKERY",
                "PASTA",
                "CHICKEN"
              ]
            }
          },
          "titleImage": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT auth descritption",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
